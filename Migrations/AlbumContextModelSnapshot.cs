// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VinylTap.ClientApp.Data;

#nullable disable

namespace VinylTap.Migrations
{
    [DbContext(typeof(AlbumContext))]
    partial class AlbumContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("VinylTap.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlbumArtist")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("AlbumArtistId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlbumCover")
                        .HasColumnType("TEXT");

                    b.Property<string>("AlbumDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AlbumGenre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AlbumLabel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AlbumName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("AlbumYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumAlbumsAvailableForSale")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Albums");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Album");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("VinylTap.Models.ConfigurationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConsumerKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ConsumerSecret")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OAuthToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OAuthTokenSecret")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("VinylTap.Models.AlbumOnHand", b =>
                {
                    b.HasBaseType("VinylTap.Models.Album");

                    b.Property<int>("AlbumId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("AlbumPrice")
                        .HasColumnType("REAL");

                    b.Property<string>("CurrencyType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasIndex("AlbumId");

                    b.HasDiscriminator().HasValue("AlbumOnHand");
                });

            modelBuilder.Entity("VinylTap.Models.AlbumOnHand", b =>
                {
                    b.HasOne("VinylTap.Models.Album", "Album")
                        .WithMany("AlbumsOnHand")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("VinylTap.Models.Album", b =>
                {
                    b.Navigation("AlbumsOnHand");
                });
#pragma warning restore 612, 618
        }
    }
}
